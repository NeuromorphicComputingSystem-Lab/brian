Next releases
=============
Version 1.4
-----------
Initial deadline: January
	* Examples from the twister
	* New model fitting
	* MultiLinear...
	* Refractoriness
	* Victor's spatializer: syntax
	* ReverseCorrelationOnline (with online stimulus using RecentStateMonitor)
	* VanRossum
	* More docs (see Brian meeting 25 Oct 2011)
	* Trace analysis: are there other functions we might want to insert? (some used to process Anna's traces?)
	* Saving spikes from a SpikeMonitor
	* IRNS/IRNO (in Sound, by Jonathan) 
	* Example: model fitting
	* PositiveCrossing (currently in dev/ideas/multiple_events)

SpikeGeneratorGroup
-------------------
Old one is in DirectControl. Slow for many spikes.
New one is in experimental/neuromorphic/AER and works for fixed arrays of spikes (not iterators).

* Write NewSpikeGeneratorGroup
* Have new threshold (FastDC???) and choose at init time depending on argument type
* [Marcel] Tests and make sure it works and is fast enough!
* Docs
* FastDCThreshold: other name?
* AERSpikeMonitor -> in main distribution

(* Syntax that combines MultipleGG and the basic one? (using MultipleSpikeGeneratorThreshold))
(* Add SpikeMonitor.save?)

Tests: in tests/testinterface/test_directcontrol
and neuromorphic/test_AERSpikeMonitor.py

Metrics
-------
Examples
in monitor:
	CoincidenceCounter: compares each model spike train with the corresponding target spike train (or more complex)
		data should be:
			1 spike train
			N spike trains
			dictionary of spike trains with keys = subgroups
		remove spikedelays
		model_length -> count (as in SpikeCounter)
		remove target_length
		gamma_factor method
	CoincidenceMatrixCounter: compares each model spike train with all model spike trains
		name: PopulationCoincidenceCounter
		update docstring
		group1, group2 (optional) instead of source
		gamma_factor method
	VanRossumMetric: use Romain's new version
	
in tools/statistics:
	get_gamma_factor: remove and copy in gamma_factor and CoincidenceCounter.gamma_factor()
	get_gamma_factor_matrix: move to CoincidenceMatrixCounter.gamma_factor()
	
in Audition/electrophysiology/Joris/utils
	-> in tools/statistics
	compute_sac
		same keywords as in correlogram
		spike_times -> spiketrains
	compute_xsac
		same thing
	DONE revcor
		ignore_transient -> onset
		only one spike train
		spike_times -> spikes
		name: spike_triggered_average

-------------
Version 1.3.1
-------------
TODO:
	[OK] * check Brian Hears docs
	[OK] * check PoissonInput
		[OK (Rossantetal2011bis)] do we have an example? 
		[OK] do we have docs? (should be documented in inputs.txt)
		[OK] init(**kwargs) should be avoided: does not show in help() and no argument control
		[OK] argument names should be consistent with other functions:
			[? here, n is the number of independent Poisson inputs, not the number of neurons in the NeuronGroup] n -> N
			[OK] w -> weight
			[OK] var -> state
			[OK] frozen -> freeze
		[OK: removed] is add_input needed now?
		[OK: should be clearer now] jitter, reliability: not clear what is meant by "number of synchronous spikes",
							 plus it is doubly defined (jitter + reliability)
	[OK] * SpikeGeneratorGroup: replace with new class
	[OK] * check svn history for new features

Initial deadline: 10 November
	[DONE] * Brian examples for our papers [add: pi-limit]
	[DONE] * New SpikeGeneratorGroup: tests
	[DONE]	- check syntax
		- test speed
	[DONE]	- test bugs
	[V] : I haven't tested speed yet. but as far as I remember the gain is quite big.
	[DONE] * Brian Hears updates (Tan/Carney)
	    - name: TanCarney
	    - doc
	[DONE] * Bug fixes added by Marcel (put in new_features.txt)
	* Trace analysis library (new electrophysiology library package)
		[DONE] - docs
		[DONE] - update our own scripts to use this library instead of the experimental code
		[DONE] - remove functions taken from experimental/trace_analysis
		[DONE] - examples (examples/electrophysiology)
	[DONE] * PoissonInputs: docs and syntax
	[DONE] * Maybe: Sompolinsky example? (if it doesn't require a sound database)
	* What is the state of the experimental neuromorphic module, anything stable there?
	[V] : We could add the ability to save spikes from a SpikeMonitor, and load the same files. This is implemented, and works on linux and mac, not on windows.
	    -> Marcel suggested we drop the support for windows.
	[DONE] * Check all new features (see svn history) and add in new_features.txt
